name: sandpit

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install deploy dependencies
        run: pip install .[deploy]
      - name: Install test dependencies
        run: pip install .[test]
      - name: Install code dependencies
        run: pip install .
      # - name: Lint with pylint
      #   run: pylint -E src/pyubx2
      - name: Security vulnerability analysis with bandit
        run: bandit -c pyproject.toml -r .
      - name: Format with black
        run: black --check . || true
      - name: Check spelling
        run: codespell || true
      - name: Lint with flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Lint again with flake8
        run: flake8 . --count --exit-zero --max-complexity=29 --max-line-length=167 --show-source --statistics
      - name: Sort imports
        run: isort --check-only .
      - name: Lint again with mypy
        run: mypy . || true
      - name: Test with pytest
        run: pytest .
      - name: Shopt
        run: shopt -s globstar && pyupgrade --py37-plus **/*.py || true
      - name: Security check with safety
        run: safety check  --continue-on-error
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install deploy dependencies
#         run: |
#           pip install .[deploy]
#       - name: Install test dependencies
#         run: |
#           pip install .[test]
#       - name: Install code dependencies
#         run: |
#           pip install .
#       - name: Lint with pylint
#         run: |
#           pylint -E src/sandpit
#       - name: Scan security vulnerabilities with bandit
#         run: |
#           bandit -c pyproject.toml -r -lll .
#       - name: Generate coverage report
#         run: |
#           pytest --cov=sandpit --cov-report=xml
#       - name: "Upload coverage to Codecov"
#         uses: codecov/codecov-action@v3
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }} # supposedly not required for public repos
#           fail_ci_if_error: true
